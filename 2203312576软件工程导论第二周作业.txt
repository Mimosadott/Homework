1. 瀑布模型和敏捷开发各有什么特点？

瀑布模型有以下显著的特点：
1)严格把软件项目的开发分隔成各个开发阶段：需求分析，要件定义，基本设计，详细设计，编码，单体测试，结合测试，系统测试等。
使用里程碑的方式，严格定义了各开发阶段的输入和输出。如果达不到要求的输出，下一阶段的工作就不展开。
2)重视和强调过程文档，在开发的中后期才会看到软件原型，早期只能通过文档来了解系统的模样。
3)瀑布模型把每个开发阶段都定义为黑盒，希望每个阶段的人员只关心自己阶段的工作，不需要关注其他阶段的工作。
好处是可以让开发人员能够更专注于本职工作，提高阶段效率。
坏处是：
a.由于各阶段的开发人员只能接触到自己工作范围内的东西，所以对客户需求的理解程度高低不等，开发人员更像是定义为流水线上的工人。
b.对于客户需求变更，编码人员会比设计人员更容易产生很强的抵触情绪。
c.在每个开发阶段都会有一些信息刻意的不让其他开发阶段的人员知道（本意是为了提到效率，但实际上有时候产生的是互相的理解偏差）。
4)瀑布模型产生的管理文档(计划书，进度表)等，能让不太了解该项目的人也能看懂项目的进度情况（只有能看懂百分比就行），很适合向领导汇报用。
所以管理人员比较喜欢瀑布模型，但是开发人员不喜欢，因为它束缚了开发人员的创造性。
5)出现返工，付出的代价会很大。
软件生命周期前期造成的Bug的影响比后期的大的多。
代价比较大的主要原因还是每个开发阶段的步子过大，每一次调整都可能伤筋动骨。
6)更适合需求相对稳定的大型项目。

敏捷开发是一种以人为核心、迭代、循序渐进的开发方法。在敏捷开发中，软件项目的构建被切分成多个子项目，各个子项目的成果都经过测试，具备集成和可运行的特征。
换言之，就是把一个大项目分为多个相互联系，但也可独立运行的小项目，并分别完成，在此过程中软件一直处于可使用状态。
敏捷开发的特点：
(1)人和交互重于过程和工具。
(2)可以工作的软件重于求全而完备的文档。
(3)客户协作重于合同谈判。
(4)随时应对变化重于循规蹈矩。  

2. 选取XP实践中的两个方法，说说这两种方法的定义和使用场景。
结对编程( Pair Programming )
定义：（1）由两个程序员在同一台电脑上共同编写解决同一问题的代码。（2）详解：通常一个人负责写编码，而另一个负责保证代码的正确性与可读性。
使用场景：定位修改BUG。2个人一起思考，查找bug的引入点，写代码时，一个人看看，一个人检查。

集体代码所有权：
定义：任何结对的程序员都可以在任何时候改进任何代码。没有程序员对任何一个特定的模块或技术单独负责，每个人都可以参与任何其它方面的开发。
使用场景：企业团队中难免会出现各种状况，比如有人结婚、生育、请假、离职等。集体代码所有权可以有效避免团队某个缺口无法及时填补，从而降低风险。